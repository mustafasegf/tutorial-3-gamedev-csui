[gd_resource type="Shader" format=2]

[resource]
code = "shader_type canvas_item;

uniform vec2 center = vec2(0.5, 0.5);
uniform float force = 0;
uniform float size = 0;
uniform float thickness = 0.1;
uniform float offset = 0;

void fragment() {
	float ratio = SCREEN_PIXEL_SIZE.x / SCREEN_PIXEL_SIZE.y;
	vec2 scaledUV = (SCREEN_UV - vec2(0.5, 0.5)) / vec2(ratio, 1.0) + vec2(0.5, 0.5);
	
	float mask = (1.0 - smoothstep(size - 0.1, size, length(scaledUV - center))) * 
		smoothstep(size- thickness-0.1, size-thickness, length(scaledUV-center));
	vec2 disp = normalize(scaledUV - center) * force * mask;
	COLOR = texture(SCREEN_TEXTURE, SCREEN_UV - disp);
	
	COLOR.r = texture(SCREEN_TEXTURE, vec2(SCREEN_UV.x + offset, scaledUV.y) - disp).r;
	COLOR.g = texture(SCREEN_TEXTURE, SCREEN_UV - disp).g;
	COLOR.b = texture(SCREEN_TEXTURE,vec2(SCREEN_UV.x - offset, scaledUV.y) - disp).b;
}"
